early_jun_flx <- subset(early_decade_monthly_flx, month==6)
recent_jun_flx <- subset(recent_decade_monthly_flx, month==6)
SanJ_Vernalis_NO3_flux_jun_wilcox <- wilcox.test(recent_jun_flx$FluxDay, early_jun_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_jul_flx <- subset(early_decade_monthly_flx, month==7)
recent_jul_flx <- subset(recent_decade_monthly_flx, month==7)
SanJ_Vernalis_NO3_flux_jul_wilcox <- wilcox.test(recent_jul_flx$FluxDay, early_jul_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_aug_flx <- subset(early_decade_monthly_flx, month==8)
recent_aug_flx <- subset(recent_decade_monthly_flx, month==8)
SanJ_Vernalis_NO3_flux_aug_wilcox <- wilcox.test(recent_aug_flx$FluxDay, early_aug_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_sep_flx <- subset(early_decade_monthly_flx, month==9)
recent_sep_flx <- subset(recent_decade_monthly_flx, month==9)
SanJ_Vernalis_NO3_flux_sep_wilcox <- wilcox.test(recent_sep_flx$FluxDay, early_sep_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_oct_flx <- subset(early_decade_monthly_flx, month==10)
recent_oct_flx <- subset(recent_decade_monthly_flx, month==10)
SanJ_Vernalis_NO3_flux_oct_wilcox <- wilcox.test(recent_oct_flx$FluxDay, early_oct_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_nov_flx <- subset(early_decade_monthly_flx, month==11)
recent_nov_flx <- subset(recent_decade_monthly_flx, month==11)
SanJ_Vernalis_NO3_flux_nov_wilcox <- wilcox.test(recent_nov_flx$FluxDay, early_nov_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
early_dec_flx <- subset(early_decade_monthly_flx, month==12)
recent_dec_flx <- subset(recent_decade_monthly_flx, month==12)
SanJ_Vernalis_NO3_flux_dec_wilcox <- wilcox.test(recent_dec_flx$FluxDay, early_dec_flx$FluxDay, exact=TRUE, conf.int = TRUE, conf.level = 0.9)
Flux_compare <- data.frame(chng_est=c(SanJ_Vernalis_NO3_flux_oct_wilcox$est,
SanJ_Vernalis_NO3_flux_nov_wilcox$est,
SanJ_Vernalis_NO3_flux_dec_wilcox$est,
SanJ_Vernalis_NO3_flux_jan_wilcox$est,
SanJ_Vernalis_NO3_flux_feb_wilcox$est,
SanJ_Vernalis_NO3_flux_mar_wilcox$est,
SanJ_Vernalis_NO3_flux_apr_wilcox$est,
SanJ_Vernalis_NO3_flux_may_wilcox$est,
SanJ_Vernalis_NO3_flux_jun_wilcox$est,
SanJ_Vernalis_NO3_flux_jul_wilcox$est,
SanJ_Vernalis_NO3_flux_aug_wilcox$est,
SanJ_Vernalis_NO3_flux_sep_wilcox$est),
low_conf=c(SanJ_Vernalis_NO3_flux_oct_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_nov_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_dec_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_jan_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_feb_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_mar_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_apr_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_may_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_jun_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_jul_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_aug_wilcox$conf.int[1],
SanJ_Vernalis_NO3_flux_sep_wilcox$conf.int[1]),
up_conf=c(SanJ_Vernalis_NO3_flux_oct_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_nov_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_dec_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_jan_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_feb_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_mar_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_apr_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_may_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_jun_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_jul_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_aug_wilcox$conf.int[2],
SanJ_Vernalis_NO3_flux_sep_wilcox$conf.int[2]))
write.table(Flux_compare, "SanJ_Vernalis_NO3_flux_wilcox.txt", quote=FALSE, row.names=FALSE)
rng_flx <- max(abs(c(Flux_compare$up_conf, Flux_compare$low_conf)))
tiff("SanJ_Vernalis_NO3_flux_shift_wilcox_Vert_Bars.tif", height=600, width=800, res=130)
par(mar=c(4,5,0.5,0.5))
plot(seq(1:12), Flux_compare$chng_est, typ='h', lend=1, lwd=15, col='white', xaxt='n', xlim=c(1,13), ylim=c(-rng_flx, rng_flx), xlab="Month", ylab=expression(paste("Median Flux Change, kg",sep='')), las=1)
plotCI(seq(1:12), Flux_compare$chng_est, ui=Flux_compare$up_conf, li=Flux_compare$low_conf, pch=16, add=TRUE)
abline(h=0)
axis(side=1,at=seq(1,12,by=1), labels=format(c(seq(as.Date("2000-10-01"), as.Date("2000-12-01"), by="month"), seq(as.Date("2000-01-01"), as.Date("2000-09-01"), by="month")),'%b'), las=2)
legend('topright', c("Median difference", "90% Confidence Interval for the Median"), pch=c(16,NA), lwd=c(NA,1), pt.cex=c(1,NA), pt.bg=c('black',NA), bty='n', bg='white')
dev.off()
# End of non-standard EGRET plot section requested by Michael
# --------------------------------------------------------------------------------------------------------
# Plot the annual average concentration and annual flow-normalized concentration
tiff("Ann_Avg_Conc_&_Ann_Flow_Normalized_Conc_SanJVernalis.tif", height = 600, width = 800, res=120)
plotConcHist(eList, plotFlowNorm=TRUE)
dev.off()
# Plot the annual average concentration and annual flow-normalized concentration
pdf("Ann_Avg_Conc_&_Ann_Flow_Normalized_Conc_SanJVernalis.pdf")
plotConcHist(eList, plotFlowNorm=TRUE, tinyPlot=TRUE,yearEnd = 2015)
dev.off()
plotConcHist(eList, plotFlowNorm=TRUE, printTitle=FALSE)
# Plot the annual flux and annual flow-normalized flux
tiff("Ann_Flux_&_Ann_Flow_Normalized_Flux_SanJVernalis.tif", height = 600, width = 800, res=120)
plotFluxHist(eList, plotFlowNorm = TRUE) # fluxMax) # fluxMax
dev.off()
# Look for a trend change:
tableChange(eList, fluxUnit=6, yearPoints=c(1971, 1981, 1991,2011,2019))
#
#Generate out-of-the-box diagnostic plots
tiff("fluxBiasMulti_SanJVernalis_Inorg_N.tif", height = 1200, width = 1200, res=120)
fluxBiasMulti(eList, moreTitle = "WRTDS")
dev.off()
tiff("Modeled_Daily_Conc_wObservations_SanJVernalis_Inorg_N.tif", height = 800, width = 1000, res=120)
plotConcTimeDaily(eList)
dev.off()
# Exploring model behavior and adjusting model parameters
tiff("Contours_SanJVernalis_Inorg_N.tif", height = 700, width = 1000, res=120)
plotContours(eList, qBottom=5,qTop=1000,yearStart=1971,yearEnd=2019, contourLevels=seq(0.0,0.28,by=0.005), color.palette = colorRampPalette(c("violet", "purple", "blue", "cyan", "green", "yellow", "orange", "red")))
dev.off()
tiff("Log_Contours_SanJVernalis_Inorg_N.tif", height = 700, width = 1000, res=120)
plotContours(eList, qBottom=5, qTop=1000, yearStart=1971, yearEnd=2019, contourLevels=seq(-6.4,-1.5,by=0.1), color.palette = colorRampPalette(c("violet", "purple", "blue", "cyan", "green", "yellow", "orange", "red")), whatSurface=1)
dev.off()
tiff("StdErr_of_Log_Contours_SanJVernalis_Inorg_N.tif", height = 700, width = 1000, res=120)
plotContours(eList, qBottom=5, qTop=1000, yearStart=1971, yearEnd=2019, contourLevels=seq(0.35,0.88,by=0.01), color.palette = colorRampPalette(c("violet", "purple", "blue", "cyan", "green", "yellow", "orange", "red")), whatSurface=2)
dev.off()
tiff("Contours_Difference_Inorg_N.tif", height = 700, width = 1000, res=120)
plotDiffContours(eList, 1971,2019,5,1000,maxDiff=0.5)
dev.off()
tiff("Contours_PercentDifference_UT_Inorg_N.tif", height = 700, width = 1000, res=120)
plotDiffContours(eList, 1971,2019,5,1000, maxDiff=100, plotPercent=TRUE)
dev.off()
plotDiffContours2 <- function (eList, year0, year1, qBottom, qTop, maxDiff, whatSurface = 3,
tcl = 0.1, qUnit = 2, span = 60, pval = 0.05, printTitle = TRUE,
plotPercent = FALSE, vert1 = NA, vert2 = NA, horiz = NA,
flowDuration = TRUE, yTicks = NA, tick.lwd = 2, lwd = 1,
cex.main = 0.95, cex.axis = 1, customPar = FALSE, color.palette = colorRampPalette(c("blue",
"white", "red")), ...)
{
localINFO <- getInfo(eList)
localDaily <- getDaily(eList)
localsurfaces <- getSurfaces(eList)
if (is.numeric(qUnit)) {
qUnit <- qConst[shortCode = qUnit][[1]]
}
else if (is.character(qUnit)) {
qUnit <- qConst[qUnit][[1]]
}
if (!customPar) {
par(oma = c(6, 1, 6, 0))
par(mar = c(5, 5, 4, 2) + 0.1)
}
surfaceName <- c("log of Concentration", "Standard Error of log(C)",
"Concentration")
j <- 3
j <- if (whatSurface == 1)
1
else j
j <- if (whatSurface == 2)
2
else j
surf <- localsurfaces
bottomLogQ <- localINFO$bottomLogQ
stepLogQ <- localINFO$stepLogQ
nVectorLogQ <- localINFO$nVectorLogQ
bottomYear <- localINFO$bottomYear
stepYear <- localINFO$stepYear
nVectorYear <- localINFO$nVectorYear
start0 <- ((year0 - bottomYear) * 16) + 1
end0 <- start0 + 16
start1 <- ((year1 - bottomYear) * 16) + 1
end1 <- start1 + 16
if (plotPercent) {
diff <- (surf[, start1:end1, j] - surf[, start0:end0,
j]) * 100/surf[, start0:end0, j]
}
else {
diff <- surf[, start1:end1, j] - surf[, start0:end0,
j]
}
difft <- t(diff)
if (length(maxDiff) == 1) {
surfaceSpan <- c(-maxDiff, maxDiff)
}
else {
surfaceSpan <- range(maxDiff)
}
contourLevels <- pretty(surfaceSpan, n = 50)
x <- seq(0, 1, stepYear)
y <- ((1:nVectorLogQ) * stepLogQ) + (bottomLogQ - stepLogQ)
yLQ <- y
qFactor <- qUnit@qUnitFactor
y <- exp(y) * qFactor
numX <- length(x)
numY <- length(y)
if (is.na(yTicks[1])) {
qBottom <- max(0.9 * y[1], qBottom)
qTop <- min(1.1 * y[numY], qTop)
yTicks <- logPretty3(qBottom, qTop)
yTicks2 <- c(0.028,0.056,0.141,0.283,0.566,1.415,2.831,5.663,14.15,28.31,56.63,141.5) #cfs
}
xTicks <- c(0, 0.0848, 0.1642, 0.249, 0.331, 0.416, 0.498,
0.583, 0.668, 0.75, 0.835, 0.917, 1)
xLabels <- c("Jan1", "Feb1", "Mar1", "Apr1", "May1", "Jun1",
"Jul1", "Aug1", "Sep1", "Oct1", "Nov1", "Dec1", "Jan1")
nxTicks <- length(xTicks)
nYTicks <- length(yTicks)
numDays <- length(localDaily$Day)
freq <- rep(0, nVectorLogQ)
plotTitle <- if (printTitle)
paste(localINFO$shortName, " ", localINFO$paramShortName,
"\nEstimated", surfaceName[j], "change from", year0,
"to", year1)
else ""
if (flowDuration) {
durSurf <- rep(0, 17 * nVectorLogQ)
dim(durSurf) <- c(17, nVectorLogQ)
centerDays <- seq(1, 388, 22.9)
centerDays <- floor(centerDays)
for (ix in 1:17) {
startDay <- centerDays[ix] - span
endDay <- centerDays[ix] + span
goodDays <- seq(startDay, endDay, 1)
goodDays <- ifelse(goodDays > 0, goodDays, goodDays +
365)
goodDays <- ifelse(goodDays < 366, goodDays, goodDays -
365)
numDays <- length(localDaily$Day)
isGood <- localDaily$Day %in% goodDays
spanDaily <- data.frame(localDaily, isGood)
spanDaily <- subset(spanDaily, isGood)
n <- length(spanDaily$Day)
LogQ <- spanDaily$LogQ
for (jQ in 1:nVectorLogQ) {
ind <- ifelse(LogQ < yLQ[jQ], 1, 0)
freq[jQ] <- sum(ind)/n
}
durSurf[ix, ] <- freq
}
plevels <- c(pval, 1 - pval)
pct1 <- format(plevels[1] * 100, digits = 2)
pct2 <- format(plevels[2] * 100, digits = 2)
firstLine <- paste(localINFO$shortName, "  ", localINFO$paramShortName,
sep = "")
secondLine <- if (plotPercent) {
paste("\nEstimated", surfaceName[j], "percent change from",
year0, "to", year1)
}
else {
paste("\nEstimated", surfaceName[j], "change from",
year0, "to", year1)
}
thirdLine <- paste("\nBlack lines are", pct1, "and",
pct2, "flow percentiles")
plotTitle <- paste(firstLine, secondLine, thirdLine)
}
vectorNone <- c(year0, log(yTicks[1], 10) - 1, year1, log(yTicks[1],
10) - 1)
v1 <- if (is.na(vert1))
vectorNone
else c(vert1, log(yTicks[1], 10), vert1, log(yTicks[nYTicks],
10))
v2 <- if (is.na(vert2))
vectorNone
else c(vert2, log(yTicks[1], 10), vert2, log(yTicks[nYTicks],
10))
h1 <- if (is.na(horiz))
vectorNone
else c(year0, log(horiz, 10), year1, log(horiz, 10))
deltaY <- (log(yTicks[length(yTicks)], 10) - log(yTicks[1],
10))/25
deltaX <- (1)/25
yLab <- qUnit@qUnitExpress
filled.contour(x, log(y, 10), difft, levels = contourLevels,
xlim = c(0, 1), ylim = c(log(yTicks[1], 10), log(yTicks[nYTicks],
10)), xlab = "", ylab = yLab, xaxs = "i", yaxs = "i",
cex.main = cex.main, plot.axes = {
axis(1, tcl = 0, at = xTicks, labels = xLabels, cex.axis = 0.9 *
cex.axis)
axis(2, tcl = 0, las = 1, at = log(yTicks, 10), labels = yTicks,
cex.axis = cex.axis)
axis(3, tcl = 0, at = xTicks, labels = FALSE)
axis(4, tcl = 0, at = log(yTicks2, 10), labels = c("1","2","5","10","20","50","100","200","500","1000","2000","5000"))    #edm: yTicks -> yTicks2, added labels
if (flowDuration)
contour(x, log(y, 10), durSurf, add = TRUE, drawlabels = FALSE,
levels = plevels, lwd = lwd,lty=2)  #adjust the 95% confidence intervals here
segments(v1[1], v1[2], v1[3], v1[4])
segments(v2[1], v2[2], v2[3], v2[4])
segments(h1[1], h1[2], h1[3], h1[4])
segments(xTicks, rep(log(yTicks[1], 10), length(xTicks)),
xTicks, rep(grconvertY(grconvertY(par("usr")[3],
from = "user", to = "inches") + tcl, from = "inches",
to = "user"), length(xTicks)), lwd = tick.lwd)
segments(xTicks, rep(log(yTicks[nYTicks], 10), length(xTicks)),
xTicks, rep(grconvertY(grconvertY(par("usr")[4],
from = "user", to = "inches") - tcl, from = "inches",
to = "user"), length(xTicks)), lwd = tick.lwd)
segments(rep(0, length(yTicks)), log(yTicks, 10),
rep(grconvertX(grconvertX(par("usr")[1], from = "user",
to = "inches") + tcl, from = "inches", to = "user"),
length(yTicks)), log(yTicks, 10), lwd = tick.lwd)
segments(rep(grconvertX(grconvertX(par("usr")[2],
from = "user", to = "inches") - tcl, from = "inches",
to = "user"), length(yTicks)), log(yTicks, 10),
rep(1, length(yTicks)), log(yTicks, 10), lwd = tick.lwd)
}, color.palette = color.palette, ...)
#try adding contours
par(new=T, mar=c(5.1,5.1,4.1,9.1))
contour(x, log(y, 10), difft, levels = seq(-100,200,by=50),xlim=c(0,1), ylim = c(log(yTicks[1], 10), log(yTicks[nYTicks],10)),
xaxs = "i",yaxs="i",xaxt="n",yaxt="n",labcex=1,method=c("flattest","edge")) #add=TRUE)
if (printTitle)
title(plotTitle, outer = TRUE, cex.main = cex.main, line = -3)
}
tiff("Contours_PercentDifference2_Inorg_N_SanJVernalis_DIN.tif", height = 700, width = 1000, res=120)
plotDiffContours2(eList, 1971,2019,5,1000, maxDiff=c(-100,100), plotPercent=TRUE, lwd=3, color.palette=colorRampPalette(c("blue","lightblue","white", "orange", "red")),tick.lwd = 1)
dev.off()
Sample$WY <- trunc(Sample$DecYear+0.25)
tiff("Monthly_Boxplot_SanJVern_Inorg_N.tif", height = 700, width = 1000, res=120)
par(mar=c(4,6,0.5,0.5))
boxplot(Sample$ConcAve~Sample$WY,log="y",varwidth=TRUE,ylim=c(0.05,10),yaxs="i",xlab="Water Year",las=1)
mtext(side=2, expression(paste("Concentration, Inorganic Nitrogen, in mg  ",L^-1,sep="")),line=4)
dev.off()
#################  Using the plotConcQSmooth function
###########
#First do flow duration analysis
flowDuration(eList, centerDate = "06-01", qUnit = 2, span = 30)
date1 <- "1972-06-01"
date2 <- "1982-06-01"
date3 <- "1992-06-01"
date4 <- "2002-06-01"
date5 <- "2012-06-01"
date6 <- "2019-06-01"
qLow= baseQ
qHigh=highQ7
#tiff("SanJVern_Date1_Discharge_NO3_conc_no_log.tif",height = 700, width = 1000, res=120)
plotConcQSmooth(eList,date1, date2, date3, qLow, qHigh, logScale=FALSE,printLegend =TRUE,legendLeft=0,legendTop=0,printTitle=TRUE)
dev.off()
tiff("SanJVern_Date2_Discharge_NO3_conc_no_log.tif",height = 700, width = 1000, res=120)
plotConcQSmooth(eList,date4, date5, date6, qLow, qHigh, logScale=FALSE,printLegend =TRUE,legendLeft=0,legendTop=0, printTitle=TRUE)
dev.off()
####################################################################################################################################
####################################################################################################################################
# ---------------------------
# Now run the EGRETci package
# ---------------------------
####################################################################################################################################
# Change working directory
#setwd("C:/Users/dsaleh/Documents/GitHub/PES_Project/Vernalis_EGRET")
#setwd("/Users/joed/PES_Project/Vernalis_EGRET/")
##Make sure that the working directory is set properly
setwd("/Users/joed/PES_Project/Vernalis_EGRET/NO3/")
subDir <- 'EGRETci_plots'
if (file.exists(subDir)){
setwd(file.path(getwd(),subDir))
} else {
dir.create(file.path(getwd(),subDir), recursive = TRUE)
setwd(file.path(getwd(),subDir))
}
#Interactive function to set up trend analysis:
caseSetUp <- trendSetUp(eList,
year1=1972,
year2=2018,
nBoot = 200,
bootBreak = 100,
blockLength = 200)
eBoot <- wBT(eList, caseSetUp, fileName ="outputText.txt")
#Should we reject Ho that Flow Normalized Concentration Trend = 0 ? Reject Ho
#best estimate is -0.00736 mg/L
#Lower and Upper 90% CIs -0.01041 -0.00282
#also 95% CIs-0.01124 -0.00248
#and 50% CIs -0.00833 -0.00485
#* Note p-value should be considered to be < stated value
#approximate two-sided p-value for Conc      0.02
#Likelihood that Flow Normalized Concentration is trending up =    0.00495 is trending down =      0.995
#
#Should we reject Ho that Flow Normalized Flux Trend = 0 ? Do Not Reject Ho
#best estimate is -0.0001151 10^6 kg/year
#Lower and Upper 90% CIs -2.76e-04  3.75e-05
#also 95% CIs -3.47e-04  5.32e-05
#and 50% CIs -1.69e-04 -3.50e-05
#approximate two-sided p-value for Flux       0.3
#Likelihood that Flow Normalized Flux is trending up = 0.153 is trending down= 0.847
#
#Upward trend in concentration is highly unlikely
#Upward trend in flux is unlikely
#Downward trend in concentration is highly likely
#Downward trend in flux is likely
#
saveEGRETci(eList, eBoot, caseSetUp, fileName = "EGRETci_output_NO3")
#
plotHistogramTrend2 <-
function (eBoot, caseSetUp, eList, xSeq = seq(-100, 100, 10),
flux = TRUE, printTitle = TRUE, cex.main = 1.1, col.fill = "grey", xlim = c(-100,100),
...)
{
bootOut <- eBoot$bootOut
INFO <- eList$INFO
if (flux) {
xFlux <- eBoot$xFlux
change <- 100 * bootOut$estF/bootOut$baseFlux
reps <- 100 * xFlux/bootOut$baseFlux
xlabel <- "Flux trend, in %"
titleWord <- "Flux"
}
else {
xConc <- eBoot$xConc
change <- 100 * bootOut$estC/bootOut$baseConc
reps <- 100 * xConc/bootOut$baseConc
xlabel <- "Concentration trend, in %"
titleWord <- "Concentration"
}
titleToPrint <- ifelse(printTitle, paste("Histogram of trend in",
INFO$paramShortName, "\n", titleWord, "Normalized Concentration:",
caseSetUp$year1, "to", caseSetUp$year2, "\n", INFO$shortName),
"")
hist(reps, breaks = xSeq, yaxs = "i", xaxs = "i", tcl = 0.5,
main = titleToPrint, freq = FALSE, xlab = xlabel, col = col.fill,
cex.main = cex.main, xlim=xlim, ...)
abline(v = change, lwd = 3, lty = 2)
abline(v = 0, lwd = 3)
box()
axis(3, tcl = 0.5, labels = FALSE)
axis(4, tcl = 0.5, labels = FALSE)
}
tiff("histo_NO3_UpTruck_Trend_conc_flux.tif", height = 700, width = 1200, res=120)
par(mfrow=c(1,2))
plotHistogramTrend2(eBoot, caseSetUp, eList, flux=FALSE, xSeq = seq(-8000,8000,5),las=1,xlim=c(-100,100))
abline(h=0)
plotHistogramTrend2(eBoot, caseSetUp, eList, flux=TRUE, xSeq = seq(-50000,50000,5),las=1)
abline(h=0)
dev.off()
#
nBoot <- 200
blockLength <- 200
coreOut <- 4 #Number of cores to leave out of processing tasks
widthCI <- 95
ciLower <- (50-(widthCI/2))/100
ciUpper <- (50+(widthCI/2))/100
probs <- c(ciLower,ciUpper)
#
nCores <- detectCores() - coreOut
cl <- makeCluster(nCores)
registerDoParallel(cl)
repAnnual <- foreach(n = 1:nBoot,.packages=c('EGRETci')) %dopar% {
annualResults <- bootAnnual(eList, blockLength,startSeed = n)
}
stopCluster(cl)
#
CIAnnualResults <- ciBands(eList, repAnnual, probs)
conc.poly.x <- c(CIAnnualResults$Year,rev(CIAnnualResults$Year))
conc.poly.y <- c(CIAnnualResults$FNConcLow,rev(CIAnnualResults$FNConcHigh))
flux.poly.x <- c(CIAnnualResults$Year,rev(CIAnnualResults$Year))
flux.poly.y <- c(CIAnnualResults$FNFluxLow*365,rev(CIAnnualResults$FNFluxHigh*365))
#
tiff("Ann_Avg_Conc_&_Ann_Flow_Normalized_Conc_Boot_SanJVernalisInorgN.tif", height = 500, width = 600, res=110)
plotConcHistBoot(eList, CIAnnualResults, plotFlowNorm=TRUE, showYLabels=TRUE, showYAxis=TRUE,col=4)
polygon(x=conc.poly.x, y=conc.poly.y, col=rgb(24,116,205,40,max=255),border=NA)
dev.off()
#
tiff("Ann_Flux_&_Ann_Flow_Normalized_Flux_Boot_SanJVernalisInorgN.tif", height = 500, width = 600, res=110)
plotFluxHistBoot(eList, fluxUnit=13, CIAnnualResults, showYLabels=TRUE, showYAxis=TRUE, col=4)
polygon(x=flux.poly.x, y=flux.poly.y, col=rgb(24,116,205,40,max=255),border=NA)
dev.off()
#
setSweave("SanJ_Vernalis_NO3_Conc_EGRETCI",7,7)
plotConcHistBoot(eList, CIAnnualResults, plotFlowNorm=TRUE, showYLabels=TRUE, showYAxis=TRUE,col=4)
polygon(x=conc.poly.x, y=conc.poly.y, col=rgb(24,116,205,40,max=255),border=NA)
dev.off()
graphics.off()
setSweave("SanJ_Vernalis_NO3_Flux_EGRETCI",7,7)
plotFluxHistBoot(eList, fluxUnit=13, CIAnnualResults, showYLabels=TRUE, showYAxis=TRUE, col=4)
polygon(x=flux.poly.x, y=flux.poly.y, col=rgb(24,116,205,40,max=255),border=NA)
graphics.off()
saveEGRETci(eList, eBoot, fileName="N_Boot_NO3")
save(repAnnual,file="RepAnnual")
write.csv(repAnnual,'reAnnual.csv')
#Should we reject Ho that Flow Normalized Concentration Trend = 0 ? Do Not Reject Ho
#best estimate is   -3.77 mg/L
#Lower and Upper 90% CIs    -9.81    85.81
#also 95% CIs  -35.60  1593.68
#and 50% CIs    -5.90    -2.51
#approximate two-sided p-value for Conc      0.17
#Likelihood that Flow Normalized Concentration is trending up =     0.0842 is trending down =      0.916
#
#Should we reject Ho that Flow Normalized Flux Trend = 0 ? Do Not Reject Ho
#best estimate is  -0.4692 10^6 kg/year
#Lower and Upper 90% CIs   -2.916   48.136
#also 95% CIs  -12.099  705.523
#and 50% CIs   -0.915   -0.314
#approximate two-sided p-value for Flux      0.22
#Likelihood that Flow Normalized Flux is trending up = 0.114 is trending down= 0.886
#
#Upward trend in concentration is very unlikely
#Upward trend in flux is unlikely
#Downward trend in concentration is very likely
#Downward trend in flux is likely
# Load required libraries
library(EGRET)
library(dataRetrieval)
library(rloadest)
library(EGRETci)
library(foreach)
library(doParallel)
library(iterators)
library(zoo)
library(plotrix)
library(lubridate)
library(changepoint)
library(corrplot)
library(RColorBrewer)
library(plotly)
library(ggplot2)
library(viridis)
library(fields)
library(extrafont)
loadfonts()
#############################################################
# Working on SSC
#############################################################
startDate <- "1971-01-01"
endDate <- "2018-12-30"
siteNumber <- "11303500"
QParameterCd <- "00060"
parameterCd <- "80154"  # "SSC"
filePath <- "/Users/joed/PES_Project/Vernalis_EGRET/"
#fileName <- "VernVern_SSC_edited.csv"
Daily <- readNWISDaily(siteNumber, QParameterCd, startDate, endDate)
#Sample <- readUserSample(filePath, fileName)
Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
Sample <- removeDuplicates(Sample)
INFO <- readNWISInfo(siteNumber = siteNumber, parameterCd = parameterCd, interactive=FALSE)
INFO$staAbbrev <- paste(strsplit(INFO$station_nm," ")[[1]][1],strsplit(INFO$station_nm," ")[[1]][2])
# Have a look at the available range of TP data
range(Sample$Date)
#"1971-01-05" "2018-12-19"
eList <- mergeReport(INFO, Daily, Sample)
