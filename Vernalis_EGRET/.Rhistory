plotFlowSingle(eList, istat = 6, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_7Day_Maximum_Q_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 7, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_Maximum_Q_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 8, qUnit = 2) #, showYLabels=FALSE)
dev.off()
#Plot changes in variability
tiff("SD_Q_window3_SJVernalis.tif", height = 600, width = 800, res=120)
plotSDLogQ(eList, window=3)
dev.off()
#plot daily flow
tiff("Period_Of_Record_Hydrograph_SJVernalis.tif", height = 600, width = 800, res=120)
plotQTimeDaily(eList, lwd = 1,qUnit = 2) #, showYLabels=FALSE)
dev.off()
#plot daily flow
postscript("Period_Of_Record_Hydrograph_SJVernalis.ps", family="Courier", height=3.25, width=3.25)
par(mar=c(3,5,1,1))
plotQTimeDaily(eList,cex.axis =0.65,cex.main = 0.65, cex = 0.9,lwd = 0.25,col = "blue", qUnit = 2,cex.lab=0.75) #, showYLabels=FALSE)
#mtext(side=2, expression(paste("Flow, in  ",ft^3," ",s^-1,sep="")),line=3)
dev.off()
tiff("Period_Of_Record_Hydrograph_LogScale_SJVernalis.tif", height = 600, width = 800, res=120)
plotQTimeDaily(eList, lwd = 1,qUnit = 2,logScale=TRUE) #, showYLabels=FALSE)
dev.off()
#plot several graphics at once
tiff("Plot4_window3_SJVernalis.tif", height = 600, width = 800, res=120)
plotFour(eList, window=3,qUnit = 2)
dev.off()
#############################################
# Look at trends at specific flow rates
#############################################
eListNext1 <- setPA(eList, paStart = 1, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext1)
tiff("Jan-Feb_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext1, qUnit=2, window=3)
dev.off()
# Try March/April
eListNext2 <- setPA(eList, paStart = 3, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext2)
tiff("Mar_Apr_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext2, qUnit=2,window=3)
dev.off()
eListNext3 <- setPA(eList, paStart = 5, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext3)
tiff("May-Jun_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext3, qUnit=2,window=3)
dev.off()
eListNext4 <- setPA(eList, paStart = 1, paLong = 4)
annualSeries <- makeAnnualSeries(eListNext4)
tiff("Jan-Apr_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext4, qUnit=2,window=3)
dev.off()
eListNext5 <- setPA(eList, paStart = 4, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext5)
tiff("Apr-May_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext5, qUnit=2,window=3)
dev.off()
#Try summer months
eListNext6 <- setPA(eList, paStart = 4, paLong = 5)
annualSeries <- makeAnnualSeries(eListNext6)
tiff("Apr-Sep_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext6, qUnit=2,window=3)
dev.off()
#Try fall, when flows may show a decrease with time as ag returns would be diminished under Ag
# dry up.
eListNext7 <- setPA(eList, paStart = 9, paLong = 3)
annualSeries <- makeAnnualSeries(eListNext7)
tiff("Sep-Nov_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext7, qUnit=2,window=3)
dev.off()
# Note that this approach of using alternatively named
# eList's leaves the original intact so that we can use
# it below without fear of altering it from it's paStart=10
# and paLong = 12 values.  However, we need to set this up:
eList <- setPA(eList, paStart = 10, paLong = 12)
annualSeries <- makeAnnualSeries(eList)
###site id is correct for Vernalis
startDate <- "1971-10-01"
endDate <- "2019-06-01"
siteNumber <- "11303500"
QParameterCd <- "00060"
parameterCd <- "00631"  # "NO3 and NO2"
#filePath <- "/Users/joed/PES_Project/Vernalis_EGRET/"
##Will need to change filePath for Dina's computer
filePath <- "C:/Users/dsaleh/Documents/GitHub/PES_Project/Vernalis_EGRET/"
Daily <- readNWISDaily(siteNumber, QParameterCd, startDate, endDate)
Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
View(Sample)
View(Sample)
##NWIS DIN data has a gap between 1974 and 1979.  We will need to supplement
##the missing time using Charlie Kratzer's data
write.csv(Sample,"NWIS_nitrate.csv")
##Add Kratzer's data to NWIS_nitrate2.csv
fileName <- "NWIS_nitrate2.csv"
Sample <- readUserSample(filePath, fileName)
removeDuplicates(Sample)
#Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
INFO <- readNWISInfo(siteNumber = siteNumber, parameterCd = parameterCd, interactive=FALSE)
INFO$staAbbrev <- paste(strsplit(INFO$station_nm," ")[[1]][1],strsplit(INFO$station_nm," ")[[1]][2])
range(Sample$Date)
#  "1971-03-02" "2019-03-12"
eList <- mergeReport(INFO, Daily, Sample)
eList <- mergeReport(INFO, Daily, Sample)
# Change the working directory; redirect plot output to NO3 folder
setwd("..")
subDir <- 'NO3/EGRET_plots'
if (file.exists(subDir)){
setwd(file.path(getwd(),subDir))
} else {
dir.create(file.path(getwd(),subDir), recursive = TRUE)
setwd(file.path(getwd(),subDir))
}
plotConcTimeDaily(eList)
# Plot water quality data
tiff("Conc_vs_Time_SanJVernalis.tif", height = 600, width = 800, res=120)
plotConcTime(eList)
dev.off()
# Now, a classic Q-C plot
tiff("Conc-Q_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
plotConcQ(eList, logScale=TRUE)
dev.off()
# The data set as flux values rather than as concentrations
tiff("Flux-Q_UpperTruckee__UT5_Inorg_N.tif", height = 600, width = 800, res=120)
plotFluxQ(eList, fluxUnit=4)
dev.off()
# Monthly boxplots
tiff("Monthly-Conc_BoxPlots_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxConcMonth(eList, logScale=TRUE)
dev.off()
# Flow on days sampled vs. all other days
tiff("Flow_on_days_sampled_vs_all_other_days_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxQTwice(eList, qUnit=2)
dev.off()
#############################################################
# Now do the analysis for DIN, NO3 plus NO2
#############################################################
###site id is correct for Vernalis
startDate <- "1971-10-01"
endDate <- "2019-06-01"
siteNumber <- "11303500"
QParameterCd <- "00060"
parameterCd <- "00631"  # "NO3 and NO2"
#filePath <- "/Users/joed/PES_Project/Vernalis_EGRET/"
##Will need to change filePath for Dina's computer
filePath <- "C:/Users/dsaleh/Documents/GitHub/PES_Project/Vernalis_EGRET/"
Daily <- readNWISDaily(siteNumber, QParameterCd, startDate, endDate)
Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
##NWIS DIN data has a gap between 1974 and 1979.  We will need to supplement
##the missing time using Charlie Kratzer's data
write.csv(Sample,"NWIS_nitrate.csv")
##Add Kratzer's data to NWIS_nitrate2.csv
fileName <- "NWIS_nitrate2.csv"
Sample <- readUserSample(filePath, fileName)
removeDuplicates(Sample)
#Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
INFO <- readNWISInfo(siteNumber = siteNumber, parameterCd = parameterCd, interactive=FALSE)
INFO$staAbbrev <- paste(strsplit(INFO$station_nm," ")[[1]][1],strsplit(INFO$station_nm," ")[[1]][2])
# Have a look at the available range of NO3 data
range(Sample$Date)
#  "1971-03-02" "2019-03-12"
eList <- mergeReport(INFO, Daily, Sample)
# Change the working directory; redirect plot output to NO3 folder
setwd("..")
subDir <- 'NO3/EGRET_plots'
if (file.exists(subDir)){
setwd(file.path(getwd(),subDir))
} else {
dir.create(file.path(getwd(),subDir), recursive = TRUE)
setwd(file.path(getwd(),subDir))
}
plotConcTimeDaily(eList)
# Plot water quality data
tiff("Conc_vs_Time_SanJVernalis.tif", height = 600, width = 800, res=120)
plotConcTime(eList)
dev.off()
# Now, a classic Q-C plot
tiff("Conc-Q_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
plotConcQ(eList, logScale=TRUE)
dev.off()
# The data set as flux values rather than as concentrations
tiff("Flux-Q_UpperTruckee__UT5_Inorg_N.tif", height = 600, width = 800, res=120)
plotFluxQ(eList, fluxUnit=4)
dev.off()
# Monthly boxplots
tiff("Monthly-Conc_BoxPlots_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxConcMonth(eList, logScale=TRUE)
dev.off()
# Flow on days sampled vs. all other days
tiff("Flow_on_days_sampled_vs_all_other_days_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxQTwice(eList, qUnit=2)
dev.off()
###This is a script taken from another study, but we will do the same thing for the PES project
##So, the script needs to be modifed for the Vernalis site
# Load required libraries
library(EGRET)
library(dataRetrieval)
library(rloadest)
library(EGRETci)
library(foreach)
library(doParallel)
library(iterators)
library(zoo)
library(plotrix)
library(lubridate)
library(changepoint)
library(corrplot)
library(RColorBrewer)
library(plotly)
library(ggplot2)
library(viridis)
library(fields)
library(extrafont)
loadfonts()
#####This script was set up for the Upper Truckee River,
#so will need to change everything to be relevant to the
#San Joaquin River at Vernalis site
##Make sure that siteid is changed everywhere , the one on line 32 is correct
# siteid: 11303500
# By not setting a fixed start and end date, readNWIS will retrieve all available data
# Will adjust to desired dates below.
StartDate <- "1971-10-01"       # 1980-03-01
EndDate <- "2019-06-01"
#site id is correct for Vernalis
# Get pure Q time series using the rloadest function (EGRET adds 0.1% of the period's mean discharge to 0 flow days
Q <- readNWISDaily("11303500",startDate=StartDate, endDate=EndDate)
# Look at flow record start and end dates
range(Q$Date)
#  "1971-10-01" "2019-06-01"
length(Q$Q[Q$Q==0])
# 0
# In write-up, make a comment about the number of 0-flow adjusted days,
# or else include it in a table
# There are 17411 data points, and 17411 days.
# Now get Q data using EGRET function, site id is correct for Vernalis
siteNumber <- "11303500"
QParameterCd <- "00060"
Daily <- readNWISDaily(siteNumber, QParameterCd, StartDate, EndDate)
###### With the information above, restrict the start and end dates to avoid gaps in the data
#StartDate <- "1929-10-01"
#EndDate <- "2019-06-01"
#Daily <- readNWISDaily(siteNumber, QParameterCd, StartDate, EndDate)
############################################################################################
# Metadata retrieval, site id is correct for Vernalis, INFO file will have 1 obs (for one site) and 52 veriables for that site
INFO <- readNWISInfo(siteNumber = "11303500", parameterCd ="00060",interactive=FALSE)
INFO$staAbbrev <- paste(strsplit(INFO$station_nm," ")[[1]][1],strsplit(INFO$station_nm," ")[[1]][2])
eList <- as.egret(INFO, Daily, NA, NA)
# store the annual series of discharge statistics
annualSeries <- makeAnnualSeries(eList)
# -------------------------------
#setwd("/Users/joed/PES_Project/Vernalis_EGRET/")
# Uncomment the following for Eric, and Dina will need to set this up for her path
# --------------------------------
setwd("C:/Users/dsaleh/Documents/GitHub/PES_Project/Vernalis_EGRET")
# Set working directory so plots are written to appropriate location
subDir <- './Q'
if (file.exists(subDir)){
setwd(file.path(getwd(),subDir))
} else {
dir.create(file.path(getwd(),subDir))
setwd(file.path(getwd(),subDir))
}
# Plotting the results for a single discharge statistic
# istat can range between 1-8; qUnit = 2: cfs
tiff("Annual_Seven_Day_Min_Flow_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 2, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_Median_Daily_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 4, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_Mean_Daily_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 5, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_Mean_Daily_SJVernaliscms.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 5, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_30Day_Maximum_Q_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 6, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_7Day_Maximum_Q_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 7, qUnit = 2) #, showYLabels=FALSE)
dev.off()
tiff("Annual_Maximum_Q_SJVernalis.tif", height = 600, width = 800, res=120)
plotFlowSingle(eList, istat = 8, qUnit = 2) #, showYLabels=FALSE)
dev.off()
#Plot changes in variability
tiff("SD_Q_window3_SJVernalis.tif", height = 600, width = 800, res=120)
plotSDLogQ(eList, window=3)
dev.off()
#plot daily flow
tiff("Period_Of_Record_Hydrograph_SJVernalis.tif", height = 600, width = 800, res=120)
plotQTimeDaily(eList, lwd = 1,qUnit = 2) #, showYLabels=FALSE)
dev.off()
#plot daily flow
postscript("Period_Of_Record_Hydrograph_SJVernalis.ps", family="Courier", height=3.25, width=3.25)
par(mar=c(3,5,1,1))
plotQTimeDaily(eList,cex.axis =0.65,cex.main = 0.65, cex = 0.9,lwd = 0.25,col = "blue", qUnit = 2,cex.lab=0.75) #, showYLabels=FALSE)
#mtext(side=2, expression(paste("Flow, in  ",ft^3," ",s^-1,sep="")),line=3)
dev.off()
tiff("Period_Of_Record_Hydrograph_LogScale_SJVernalis.tif", height = 600, width = 800, res=120)
plotQTimeDaily(eList, lwd = 1,qUnit = 2,logScale=TRUE) #, showYLabels=FALSE)
dev.off()
#plot several graphics at once
tiff("Plot4_window3_SJVernalis.tif", height = 600, width = 800, res=120)
plotFour(eList, window=3,qUnit = 2)
dev.off()
#############################################
# Look at trends at specific flow rates
#############################################
eListNext1 <- setPA(eList, paStart = 1, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext1)
tiff("Jan-Feb_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext1, qUnit=2, window=3)
dev.off()
# Try March/April
eListNext2 <- setPA(eList, paStart = 3, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext2)
tiff("Mar_Apr_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext2, qUnit=2,window=3)
dev.off()
eListNext3 <- setPA(eList, paStart = 5, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext3)
tiff("May-Jun_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext3, qUnit=2,window=3)
dev.off()
eListNext4 <- setPA(eList, paStart = 1, paLong = 4)
annualSeries <- makeAnnualSeries(eListNext4)
tiff("Jan-Apr_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext4, qUnit=2,window=3)
dev.off()
eListNext5 <- setPA(eList, paStart = 4, paLong = 2)
annualSeries <- makeAnnualSeries(eListNext5)
tiff("Apr-May_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext5, qUnit=2,window=3)
dev.off()
#Try summer months
eListNext6 <- setPA(eList, paStart = 4, paLong = 5)
annualSeries <- makeAnnualSeries(eListNext6)
tiff("Apr-Sep_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext6, qUnit=2,window=3)
dev.off()
#Try fall, when flows may show a decrease with time as ag returns would be diminished under Ag
# dry up.
eListNext7 <- setPA(eList, paStart = 9, paLong = 3)
annualSeries <- makeAnnualSeries(eListNext7)
tiff("Sep-Nov_Flow_Analysis.tif", height = 600, width = 800, res=120)
plotFour(eListNext7, qUnit=2,window=3)
dev.off()
# Note that this approach of using alternatively named
# eList's leaves the original intact so that we can use
# it below without fear of altering it from it's paStart=10
# and paLong = 12 values.  However, we need to set this up:
eList <- setPA(eList, paStart = 10, paLong = 12)
annualSeries <- makeAnnualSeries(eList)
#############################################################
# Now do the analysis for DIN, NO3 plus NO2
#############################################################
###site id is correct for Vernalis
startDate <- "1971-10-01"
endDate <- "2019-06-01"
siteNumber <- "11303500"
QParameterCd <- "00060"
parameterCd <- "00631"  # "NO3 and NO2"
#filePath <- "/Users/joed/PES_Project/Vernalis_EGRET/"
##Will need to change filePath for Dina's computer
filePath <- "C:/Users/dsaleh/Documents/GitHub/PES_Project/Vernalis_EGRET/"
Daily <- readNWISDaily(siteNumber, QParameterCd, startDate, endDate)
Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
##NWIS DIN data has a gap between 1974 and 1979.  We will need to supplement
##the missing time using Charlie Kratzer's data
write.csv(Sample,"NWIS_nitrate.csv")
##Add Kratzer's data to NWIS_nitrate2.csv
fileName <- "NWIS_nitrate2.csv"
Sample <- readUserSample(filePath, fileName)
removeDuplicates(Sample)
#Sample <- readNWISSample(siteNumber, parameterCd, startDate, endDate)
INFO <- readNWISInfo(siteNumber = siteNumber, parameterCd = parameterCd, interactive=FALSE)
INFO$staAbbrev <- paste(strsplit(INFO$station_nm," ")[[1]][1],strsplit(INFO$station_nm," ")[[1]][2])
# Have a look at the available range of NO3 data
range(Sample$Date)
#  "1971-03-02" "2019-03-12"
eList <- mergeReport(INFO, Daily, Sample)
# Change the working directory; redirect plot output to NO3 folder
setwd("..")
subDir <- 'NO3/EGRET_plots'
if (file.exists(subDir)){
setwd(file.path(getwd(),subDir))
} else {
dir.create(file.path(getwd(),subDir), recursive = TRUE)
setwd(file.path(getwd(),subDir))
}
plotConcTimeDaily(eList)
# Plot water quality data
tiff("Conc_vs_Time_SanJVernalis.tif", height = 600, width = 800, res=120)
plotConcTime(eList)
dev.off()
# Now, a classic Q-C plot
tiff("Conc-Q_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
plotConcQ(eList, logScale=TRUE)
dev.off()
# The data set as flux values rather than as concentrations
tiff("Flux-Q_UpperTruckee__UT5_Inorg_N.tif", height = 600, width = 800, res=120)
plotFluxQ(eList, fluxUnit=4)
dev.off()
# Monthly boxplots
tiff("Monthly-Conc_BoxPlots_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxConcMonth(eList, logScale=TRUE)
dev.off()
# Flow on days sampled vs. all other days
tiff("Flow_on_days_sampled_vs_all_other_days_SanJVernalis_Inorg_N.tif", height = 600, width = 800, res=120)
boxQTwice(eList, qUnit=2)
dev.off()
#########################################
# Now start the Flow-Normalized Analysis
#########################################
# Build the regression model
eList <- modelEstimation(eList, windowY = 7, windowQ = 2, windowS = 0.5, minNumObs = 100, minNumUncen =50)
MonthlyResults <- calculateMonthlyResults(eList)
# Dump NO3-related flow-normalized data to text file for bringing together with other monitoring sites
paLong <- 12
paStart <- 10
localDaily <- getDaily(eList)
localAnnualResults <- setupYears(paStart = paStart, paLong = paLong, localDaily = localDaily)
write.table(localAnnualResults, file = 'SanJ_Vernalis_NO3_RawVals.txt', quote=FALSE, row.names=FALSE)
# Determine which flow rates to use for discharge-specific trends
# Baseflow: mean of the annual 30-day low flows
baseQ <- mean(aggregate(Q30 ~ waterYear, data = localDaily, min)[,2])
baseQ_txt <- format(baseQ, digits=2)
baseQ_txt_cfs <- format(baseQ * 35.315, digits=2)
# mid-range: median flow rate across all years
medQ <- median(localDaily$Q)
medQ_txt <- format(medQ, digits=2)
medQ_txt_cfs <- format(medQ * 35.315, digits=2)
# high flow: get the 25% quantile of each year's maximum Q7
# This will help ensure (but not guarantee) that every year is well represented in the high-end flows
highQ7 <- as.numeric(quantile(aggregate(Q7 ~ waterYear, data = localDaily, max)[,2])[2])
highQ7_txt <- format(highQ7, digits=2)
highQ7_txt_cfs <- format(highQ7 * 35.315, digits=2)
# The following bit of script generates a figure discussed by Joe in an email on 6/2/17
# -------------------------------------------------------------------------------------
tiff("Discharge_specific_trends_NO3_centered_on_06-01.tif", height = 600, width = 1200, res=120)
par(mar=c(4,6,4.1,8))
plotConcTimeSmooth(eList, q1 = baseQ, q2 = medQ, q3 = highQ7, centerDate='06-01',
yearStart=localDaily$waterYear[1], yearEnd=localDaily$waterYear[nrow(localDaily)],
logScale=TRUE, printLegend=TRUE)
# Determine y position of the legend
# ----------------------------------
y_l <- par('usr')[3]
y_u <- par('usr')[4]
y_m <- mean(y_l, y_u)
# Use the top version of the legend to add cfs
# legend('bottomleft', c(eval(substitute(expression(paste('Baseflow [',baseQ_txt,' ', m^3~s^-1,'(',baseQ_txt_cfs,' ',ft^3~s^-1,')]',sep=' ')), list(baseQ_txt=baseQ_txt, baseQ_txt_cfs=baseQ_txt_cfs))),
#                        eval(substitute(expression(paste('Median Flow [',medQ_txt,' ', m^3~s^-1,'(',medQ_txt_cfs,' ',ft^3~s^-1,')]',sep=' ')), list(medQ_txt=medQ_txt, medQ_txt_cfs=medQ_txt_cfs))),
#                        eval(substitute(expression(paste('High Flow [',highQ7_txt,' ', m^3~s^-1,'(',highQ7_txt_cfs,' ',ft^3~s^-1,')]',sep=' ')), list(highQ7_txt=highQ7_txt, highQ7_txt_cfs=highQ7_txt_cfs)))),
#                        col=c('black','red','green'), lwd=2, bg='white', bty='n')
legend('bottomleft', c(eval(substitute(expression(paste('Baseflow (',baseQ_txt,' ', m^3~s^-1,')',sep=' ')), list(baseQ_txt=baseQ_txt))),
eval(substitute(expression(paste('Median Flow (',medQ_txt,' ', m^3~s^-1,')',sep=' ')), list(medQ_txt=medQ_txt))),
eval(substitute(expression(paste('High Flow (',highQ7_txt,' ', m^3~s^-1,')',sep=' ')), list(highQ7_txt=highQ7_txt)))),
col=c('black','red','green'), lwd=2, bg='white', bty='n')
dev.off()
# Restore original plotting margins
par(mar=c(5.1,6.1,4.1,2.1))
# The following bit of script generates a figure discussed by Michael in an email on 6/2/17
# -----------------------------------------------------------------------------------------
# Get the row number corresponding to the maximum concentration for each year (bearing in mind that these are 'within group' row numbers)
out <- aggregate(ConcDay ~ waterYear, data = localDaily, which.max)
# Ensure data is ordered by water year
out <- out[ order(out$waterYear), ]
# Get a count of the number of days within each of the water years
tbl <- table(localDaily$waterYear)
# Return the absolute row positions for each water year's max concentration
out$AbsConcDay <- out$ConcDay + cumsum(c(0,tbl[-length(tbl)]))
# Make a data.frame containing only the rows with each water year's max conc
out2 <- localDaily[out$AbsConcDay,]
# Gather only the needed data
out2 <- data.frame(Date=out2$Date, Q=out2$Q, Conc=out2$ConcDay, wyr=out2$waterYear, Julian=yday(as.Date(out2$Date)))
# Need to readjust the Julian day to start on Oct 1 (This function doesn't yet account for leap years)
out2$JulianWYR <- ifelse(out2$Julian > 273, out2$Julian - 273, 92 + out2$Julian)
# Plot it
tiff("JulianDay_of_Max_NO3_Conc.tif", height = 600, width = 800, res=120)
plot(out2$wyr, out2$JulianWYR, pch=16, xlab='Water Year', ylab='Julian Day', yaxs='i', ylim=c(0,370), las=1)
dev.off()
# In a follow-up email from Michael on 6/7/17, Michael suggested two alterations:
#  1) Apply a 30-day moving average
#  2) Use the flow-normalized concentration
# To start with, I'll attempt to apply a 30-day window to the simulated daily concentrations
localDaily$ConcDay_30day <- c(rep(rollapply(localDaily$ConcDay, width=30, mean)[1],times=14) , rollapply(localDaily$ConcDay, width=30, mean), rep(rollapply(localDaily$ConcDay, width=30, mean)[length(rollapply(localDaily$ConcDay, width=30, mean))], times=15))
out_m <- aggregate(ConcDay_30day ~ waterYear, data = localDaily, which.max)
out_m <- out_m[ order(out_m$waterYear), ]
out_m$AbsConcDay <- out_m$ConcDay + cumsum(c(0,tbl[-length(tbl)]))
out_m2 <- localDaily[out_m$AbsConcDay,]
out_m2 <- data.frame(Date=out_m2$Date, Q=out_m2$Q, Conc30=out_m2$ConcDay_30day, wyr=out_m2$waterYear, Julian=yday(as.Date(out_m2$Date)))
out_m2$JulianWYR <- ifelse(out_m2$Julian > 273, out_m2$Julian - 273, 92 + out_m2$Julian)
tiff("JulianDay_of_Max_NO3_Conc_Using_30_rollingAvg.tif", height = 600, width = 800, res=120)
plot(out_m2$wyr, out_m2$JulianWYR, pch=16, xlab='Water Year', ylab='Julian Day', yaxs='i', ylim=c(0,370), las=1)
dev.off()
# Next, I'll try using the flow-normalized concentration (same general code flow as above)
# First, try plotting flow-normalized concentration:
# Plot it
tiff("Flow_Normalized_Conc_TC1_NO3.tif", height = 600, width = 800, res=120)
plot(as.Date(localDaily$Date), localDaily$FNConc, typ='l', las=1, xlab='Time', ylab='Flow-normalized Concentration')
dev.off()
out_FN <- aggregate(FNConc ~ waterYear, data = localDaily, which.max)
out_FN <- out_FN[ order(out_FN$waterYear), ]
out_FN$AbsConcDay <- out_FN$FNConc + cumsum(c(0,tbl[-length(tbl)]))
out2_FN <- localDaily[out_FN$AbsConcDay,]
out2_FN <- data.frame(Date=out2_FN$Date, Q=out2_FN$Q, Conc=out2_FN$FNConc, wyr=out2_FN$waterYear, Julian=yday(as.Date(out2_FN$Date)))
out2_FN$JulianWYR <- ifelse(out2_FN$Julian > 273, out2_FN$Julian - 273, 92 + out2_FN$Julian)
# Plot it
tiff("JulianDay_of_Max_NO3_Flow_Normalized_Conc.tif", height = 600, width = 800, res=120)
plot(out2_FN$wyr, out2_FN$JulianWYR, pch=16, xlab='Water Year', ylab='Julian Day', yaxs='i', ylim=c(0,370), las=1)
dev.off()
